{"version":3,"sources":["layout/Headergrid.js","store/Store.js","components/SpotifyOwn.js","components/yt-search_bar.js","components/yt-video_list_item.js","components/yt-video_list.js","components/yt-video_details.js","components/Youtube.js","components/Wikipedia.js","layout/Bodygrid.js","layout/Footergrid.js","App.js","serviceWorker.js","index.js"],"names":["Headergrid","className","SearchContext","React","createContext","Store","children","useState","query","setQuery","Provider","value","SpotifyOwn","spotifyWebApi","Spotify","params","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","getHashParams","useContext","artists","setArtists","albums","setAlbums","switchDisplay","setswitchDisplay","access_token","setAccessToken","alert","href","id","onSubmit","preventDefault","url","fetch","headers","Authorization","then","resp","json","data","items","fetchSpotifyArtists","type","autoFocus","onChange","target","name","placeholder","Container","maxWidth","map","artist","index","img","images","artistURL","external_urls","spotify","imgUrl","console","log","key","alt","rel","src","width","album","imgAlbum","albumURL","imgUrlAlbum","ReactDOM","render","document","getElementById","SearchBar","props","state","term","onInputChange","bind","this","setState","onSearchTermChange","Component","VideoListItem","video","onUserSelected","imageUrl","snippet","thumbnails","medium","onClick","title","VideoList","videoItems","videos","onVideoSelect","etag","VideoDetail","videoId","Yout","selectedVideo","isActive","addActiveClass","videoSearch","searchTerm","YTSearch","userSelected","Wikipedia","useWikiSearchEngine","wikiSearchReturnValues","pointerToThis","action","list","srsearch","WikiSearchTerms","format","Object","keys","forEach","response","search","push","queryResultPageFullURL","queryResultPageID","pageid","queryResultPageTitle","queryResultPageSnippet","page","key2","pageID","urlForRetrievingPageURLByPageID","pages","fullurl","forceUpdate","changeWikiSearchTerms","WikiSearchResults","key3","dangerouslySetInnerHTML","__html","Bodygrid","Youtube","Footergrid","App","Boolean","hostname","match","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b374b9b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\nimport \"./Layout.css\";\r\n/**\r\n * @name Headergrid.js (Layout)\r\n * @author Schober Andreas\r\n * @const Headergrid: containts all information of the header\r\n *\r\n * @return: display header\r\n */\r\nconst Headergrid = () => {\r\n  return (\r\n    <>\r\n      <div className=\"Header m-3 tracking-widest\">\r\n        <h1>AllEarsMusicHeads</h1>\r\n        <p>Searchengine for Spotify, Youtube and Wikipedia</p>\r\n        <hr />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Headergrid;\r\n","import React, { useState } from \"react\";\r\nexport const SearchContext = React.createContext(\"\");\r\n/**\r\n * @name Store.js\r\n * @author Schober Andreas\r\n * @const Store: create a provider to provide the global query string and state to all files needed\r\n */\r\nconst Store = ({ children }) => {\r\n  /**\r\n   * @hook [query,setQuery] = global state to provide the search string for all input fields\r\n   */\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  return (\r\n    <SearchContext.Provider value={[query, setQuery]}>\r\n      {children}\r\n    </SearchContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Store;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"../App.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { SearchContext } from \"../store/Store\";\r\n\r\n/**\r\n * @name SpotifyOwn.js (MainComponent)\r\n * @author Schober Andreas\r\n * @function SpotifyOwn(): is one of the two MainFunctions (besides App.js) for displaying and process the Spotify search\r\n *                         it also contains the input field for the global query string\r\n * @retrun the input field which contains the query string aswell as display the found artists and albums of Spotify\r\n */\r\n\r\nfunction SpotifyOwn() {\r\n  /**\r\n   * @hooks [artists, setArtists], [albums, setAlbums], [switchDisplay, setswitchDisplay] to define constants and states for creating the Youtube component\r\n   * @hook [query,setQuery] = global state to provide the search string for all input fields\r\n   * @const spotifyWebApi: new Spotify instance\r\n   * @const params: needed parameters from Spotify also used for authorization\r\n   */\r\n  const spotifyWebApi = new Spotify();\r\n  const params = getHashParams();\r\n  const [query, setQuery] = useContext(SearchContext);\r\n  const [artists, setArtists] = useState([]);\r\n  const [albums, setAlbums] = useState([]);\r\n  const [switchDisplay, setswitchDisplay] = useState(true);\r\n\r\n  /**\r\n   * @function getHashParams(): get needed parameters from Spotify also needed for authorization\r\n   */\r\n  function getHashParams() {\r\n    var hashParams = {};\r\n    var e,\r\n      r = /([^&;=]+)=?([^&;]*)/g,\r\n      q = window.location.hash.substring(1);\r\n    while ((e = r.exec(q))) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    }\r\n    return hashParams;\r\n  }\r\n  if (params.access_token) {\r\n    spotifyWebApi.setAccessToken(params.access_token);\r\n  } else {\r\n    alert(\r\n      \"Du hast noch keinen Spotify-AccessToken hinterlegt, dieser wird für den Betrieb der Webseite benötigt! Du wirst nun auf zum Spotify-Login weitergeleitet\"\r\n    );\r\n    window.location.href = \"http://localhost:8888\";\r\n  }\r\n\r\n  /**\r\n   * @function fetchSpotifyArtists(): fetch API data for the look up of Spotify artists and albums\r\n   */\r\n  function fetchSpotifyArtists() {\r\n    let url = `https://api.spotify.com/v1/search?q=${query}&type=artist,album&limit=6`;\r\n    fetch(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${params.access_token}`\r\n      }\r\n    })\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        setArtists(data.artists.items);\r\n        setAlbums(data.albums.items);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @function changeDisplay(): switch state to display html on website after button click\r\n   */\r\n  function changeDisplay() {\r\n    setswitchDisplay(false);\r\n  }\r\n\r\n  /**\r\n   * @function handleSubmit(e): handle the submit and trigger the functions fetchSpotifyArtists(); and changeDisplay(); to display the data\r\n   * @param {Event} e: triggers with an event (like onClick)\r\n   */\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    fetchSpotifyArtists();\r\n    changeDisplay();\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 rounded p-2 m-4 border-2 border-black\">\r\n      {/**\r\n       * input field for query string\r\n       */}\r\n      <div id=\"input_search\" className=\"searchinput\">\r\n        <div className=\"searchconsole\">\r\n          <h2>Spotify</h2>\r\n          <form className=\"search-bar\" onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              autoFocus\r\n              className=\"p-2 my-2 mx-auto rounded shadow-lg w-3/5\"\r\n              value={query}\r\n              onChange={e => setQuery(e.target.value)}\r\n              name=\"searchinput\"\r\n              placeholder=\"Search Spotify Artists and Albums\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"my-2 bg-indigo-700 text-blue-100 p-2 rounded shadow-lg\"\r\n            >\r\n              Suche\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={switchDisplay ? \"hidden\" : \"spotify\"}>\r\n        {/**\r\n         * display Spotify artists\r\n         */}\r\n        <Container maxWidth=\"md\" className=\"my-3\">\r\n          <div\r\n            id=\"spotify-artist\"\r\n            className=\"border-2 border-black m-2 tracking-wider bg-gray-300 rounded flex flex-wrap\"\r\n          >\r\n            <h3 className=\"text-center mx-auto my-2 text-lg font-semibold tracking-wider\">\r\n              Artists:\r\n            </h3>\r\n            <div className=\"flex flex-wrap\">\r\n              {artists.map((artist, index) => {\r\n                const img = artist.images[0];\r\n                const artistURL = artist.external_urls.spotify;\r\n                const imgUrl = img\r\n                  ? img.url\r\n                  : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQKquIPm6jfSmGvkb3yuOw9XsWEwpV7nKsJF9E1j67D8itgurl-\";\r\n                return (\r\n                  console.log(artist) || (\r\n                    <div className=\"w-1/2 mb-3 text-center p-1\" key={index}>\r\n                      <a\r\n                        href={artistURL}\r\n                        alt={artistURL}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {\r\n                          <img\r\n                            className=\"rounded mb-3 text-center mx-auto\"\r\n                            src={imgUrl}\r\n                            alt={artist.name}\r\n                            width=\"80\"\r\n                          />\r\n                        }\r\n                        <p className=\"text-sm\">{artist.name}</p>\r\n                      </a>\r\n                      <br />\r\n                    </div>\r\n                  )\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n        {/**\r\n         * display Spotify albums\r\n         */}\r\n        <Container maxWidth=\"md\" className=\"my-3\">\r\n          <div\r\n            id=\"spotify-album\"\r\n            className=\"border-2 border-black m-2 tracking-wider bg-gray-300 rounded flex flex-wrap\"\r\n          >\r\n            <h3 className=\"text-center mx-auto my-2 text-lg font-semibold\">\r\n              Albums:\r\n            </h3>\r\n            <div className=\"flex flex-wrap\">\r\n              {albums.map((album, index) => {\r\n                const imgAlbum = album.images[0];\r\n                const albumURL = album.external_urls.spotify;\r\n                const imgUrlAlbum = imgAlbum\r\n                  ? imgAlbum.url\r\n                  : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQKquIPm6jfSmGvkb3yuOw9XsWEwpV7nKsJF9E1j67D8itgurl-\";\r\n                return (\r\n                  console.log(albums) || (\r\n                    <div className=\"w-1/2 mb-3 text-center p-1\" key={index}>\r\n                      <a\r\n                        href={albumURL}\r\n                        alt={albumURL}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {\r\n                          <img\r\n                            className=\"rounded mb-3 text-center mx-auto\"\r\n                            src={imgUrlAlbum}\r\n                            alt={album.name}\r\n                            width=\"80\"\r\n                          />\r\n                        }\r\n                        <p className=\"text-sm\">{album.name}</p>\r\n                      </a>\r\n                    </div>\r\n                  )\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nReactDOM.render(<SpotifyOwn />, document.getElementById(\"root\"));\r\nexport default SpotifyOwn;\r\n","import React from \"react\";\r\n/**\r\n * @name yt-searc_bar.js (Youtube.js component)\r\n * @author Schober Andreas\r\n * @class SearchBar: provides the functionallity of the search bar for the parent component Youtube\r\n * @return: all needed components and data\r\n */\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { term: \"\" };\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n  }\r\n\r\n  /**\r\n   * @function onInputChange(): set the search term to the current value of the input field\r\n   * @param {Event} e\r\n   */\r\n  onInputChange(e) {\r\n    this.setState({ term: e.target.value });\r\n    this.props.onSearchTermChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span className=\"search-bar\">\r\n        <input\r\n          className=\"p-2 my-2 mx-auto rounded shadow-lg w-3/5\"\r\n          value={this.state.term}\r\n          onChange={this.onInputChange}\r\n          placeholder=\"Search Youtube Videos\"\r\n        />\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n/**\r\n * @name yt-vidoe_list_item.js (Youtube.js component)\r\n * @author Schober Andreas\r\n * @const VideoListItem: creates the the small related videos inside of list-elements for the parent component Youtube\r\n * @return: the list-elements displaying the suggested and most related videos to our search string\r\n */\r\nconst VideoListItem = props => {\r\n  /**\r\n   * @const video: contains the props of the video\r\n   * @const onUserSelected: to selec another video\r\n   * @const imageUrl: contains the image URL\r\n   */\r\n  const video = props.video;\r\n  const onUserSelected = props.onUserSelected;\r\n  const imageUrl = video.snippet.thumbnails.medium.url;\r\n\r\n  return (\r\n    <li onClick={() => onUserSelected(video)} className=\"list-group-item\">\r\n      <span className=\"video-list media flex\">\r\n        <div className=\"w-1/3\">\r\n          <img src={imageUrl} alt={video.snippet.title} />\r\n        </div>\r\n        <div className=\"w-2/3\">\r\n          <div className=\"yt-list-title\">{video.snippet.title}</div>\r\n        </div>\r\n      </span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default VideoListItem;\r\n","import React from \"react\";\r\nimport VideoListItem from \"./yt-video_list_item\";\r\n/**\r\n * @name yt-video_list.js (Youtube.js component)\r\n * @author Schober Andreas\r\n * @const VideoList: creates the <ul>-container for displaying the <li>-items of yt-video_list_item.js\r\n * @return: the <ul>-container + the videos\r\n */\r\nconst VideoList = props => {\r\n  /**\r\n   * @const videoItems: map the properties of the related Youtube videos and create the VideoListItem component\r\n   */\r\n  const videoItems = props.videos.map(video => {\r\n    return (\r\n      <VideoListItem\r\n        onUserSelected={props.onVideoSelect}\r\n        key={video.etag}\r\n        video={video}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <ul className=\"list-group\">{videoItems}</ul>;\r\n};\r\n\r\nexport default VideoList;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n/**\r\n * @name yt-search_details.js (Youtube.js component)\r\n * @author Schober Andreas\r\n * @const VideoDetail: creates the bigger Youtube video for display and show the video title for the parent component Youtube\r\n * @return: the heading, the preview video aswell as the title of the video\r\n */\r\nconst VideoDetail = props => {\r\n  /**\r\n   * @const video: contains the props of the video\r\n   * @const videoId: contains the video ID\r\n   * @const url: contains the basic Youtube URL + the video ID\r\n   */\r\n  const video = props.video;\r\n\r\n  if (!video) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const videoId = video.id.videoId;\r\n  const url = `https://www.youtube.com/embed/${videoId}`;\r\n\r\n  return (\r\n    <div className=\"video-detail\">\r\n      <div className=\"embed-responsive embed-responsive-16by9\">\r\n        <iframe\r\n          className=\"embed-responsive-itemn rounded\"\r\n          src={url}\r\n          title={video.snippet.title}\r\n        ></iframe>\r\n      </div>\r\n      <div className=\"details my-0 bg-gray-500\">\r\n        <div>{video.snippet.title}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n","import React, { Component } from \"react\";\r\nimport SearchBar from \"./yt-search_bar\";\r\nimport YTSearch from \"youtube-api-search\";\r\nimport VideoList from \"./yt-video_list\";\r\nimport VideoDetail from \"./yt-video_details\";\r\n/**\r\n * @name Youtube.js (MainComponent)\r\n * @author Schober Andreas\r\n * @class Yout: provides all needed states and constants for the look up at Youtube\r\n * @return: all needed components and found search results\r\n * @const API_KEY for Youtube\r\n */\r\nconst API_KEY = \"AIzaSyDgM3087-KiceH8EbAgdmsw311gmMBfVwk\";\r\nclass Yout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      videos: [],\r\n      selectedVideo: null,\r\n      isActive: false\r\n    };\r\n    this.addActiveClass = this.addActiveClass.bind(this);\r\n\r\n    this.videoSearch(\"\");\r\n  }\r\n\r\n  /**\r\n   * @function addActiveClass(): needed to switch from not displaying to displaying the search results\r\n   */\r\n  addActiveClass() {\r\n    this.setState({\r\n      isActive: true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function videoSearch(): fetch data from Youtube and provide the needed API_KEY\r\n   * @param {searchTerm}: containts the search string\r\n   */\r\n  videoSearch(searchTerm) {\r\n    YTSearch({ key: API_KEY, term: searchTerm }, data => {\r\n      this.setState({\r\n        videos: data,\r\n        selectedVideo: data[0]\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"youtube bg-gray-100 rounded p-2 pb-6 m-4 border-2 border-black\">\r\n        <h2>Youtube</h2>\r\n        <form className=\"search-bar\">\r\n          <SearchBar\r\n            className=\"w-3/5\"\r\n            onSearchTermChange={searchTerm => this.videoSearch(searchTerm)}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"my-2 bg-indigo-700 text-blue-100 p-2 rounded shadow-lg\"\r\n            onClick={this.addActiveClass}\r\n          >\r\n            Suche\r\n          </button>\r\n        </form>\r\n        <div\r\n          className={\r\n            this.state.isActive\r\n              ? \"bg-gray-100 rounded p-2 m-4 border-2 border-black\"\r\n              : \"hidden\"\r\n          }\r\n        >\r\n          <VideoDetail video={this.state.selectedVideo} />\r\n          <VideoList\r\n            onVideoSelect={userSelected =>\r\n              this.setState({ selectedVideo: userSelected })\r\n            }\r\n            videos={this.state.videos}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Yout;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n/**\r\n * @name Wikipedia.js (MainComponent)\r\n * @author Schober Andreas\r\n * @class Wikipedia: provides all needed states and constants for the look up at Wikipedia\r\n * @return: all needed components and found search results\r\n */\r\nclass Wikipedia extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      wikiSearchReturnValues: [],\r\n      WikiSearchTerms: \"\"\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @function useWikiSearchEngine(e): fetches all the data from the API and creates the needed URL, it is basically the MainClass for Wikipedia\r\n   * @param {Event} e: the functions and fetches inside useWikiSearchEngine are triggerd through the onClick event\r\n   *\r\n   */\r\n  useWikiSearchEngine = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      wikiSearchReturnValues: []\r\n    });\r\n\r\n    /**\r\n     * needed constants and variables for Wikipedia\r\n     */\r\n    const pointerToThis = this;\r\n    var url = \"https:en.wikipedia.org/w/api.php\";\r\n    var params = {\r\n      action: \"query\",\r\n      list: \"search\",\r\n      srsearch: this.state.WikiSearchTerms,\r\n      format: \"json\"\r\n    };\r\n\r\n    url = url + \"?origin=*\";\r\n    Object.keys(params).forEach(key => {\r\n      url += \"&\" + key + \"=\" + params[key];\r\n    });\r\n\r\n    fetch(url)\r\n      .then(function(response) {\r\n        return response.json();\r\n      })\r\n      .then(function(response) {\r\n        for (var key in response.query.search) {\r\n          pointerToThis.state.wikiSearchReturnValues.push({\r\n            queryResultPageFullURL: \"no link\",\r\n            queryResultPageID: response.query.search[key].pageid,\r\n            queryResultPageTitle: response.query.search[key].title,\r\n            queryResultPageSnippet: response.query.search[key].snippet\r\n          });\r\n        }\r\n      })\r\n      .then(function(response) {\r\n        for (var key2 in pointerToThis.state.wikiSearchReturnValues) {\r\n          let page = pointerToThis.state.wikiSearchReturnValues[key2];\r\n          let pageID = page.queryResultPageID;\r\n          let urlForRetrievingPageURLByPageID = `https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=info&pageids=${pageID}&inprop=url&format=json`;\r\n\r\n          console.log(\"PAGE: \" + page); // [object Object]\r\n          fetch(urlForRetrievingPageURLByPageID)\r\n            .then(function(response) {\r\n              return response.json();\r\n            })\r\n            .then(function(response) {\r\n              page.queryResultPageFullURL =\r\n                response.query.pages[pageID].fullurl;\r\n\r\n              console.log(\"fullurl: \" + response.query.pages[pageID].fullurl);\r\n              console.log(\"fullurl page.: \" + page.queryResultPageFullURL);\r\n              pointerToThis.forceUpdate();\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  /**\r\n   * @function changeWikiSearchTerms(): set the search term for Wikipedia to the current value of the input field\r\n   * @param {Event} e: triggers with an event (like onClick)\r\n   */\r\n  changeWikiSearchTerms = e => {\r\n    this.setState({\r\n      WikiSearchTerms: e.target.value\r\n    });\r\n  };\r\n\r\n  /**\r\n   * the displayed articles are build inside the render()-function and filled with the needed data from the API\r\n   */\r\n  render() {\r\n    let WikiSearchResults = [];\r\n    console.log(\"wikiSearchReturnValues: \" + this.state.wikiSearchReturnValues);\r\n\r\n    for (var key3 in this.state.wikiSearchReturnValues) {\r\n      WikiSearchResults.push(\r\n        <div\r\n          className=\"searchResultDiv border-2 border-black m-2 bg-gray-300 rounded\"\r\n          key={key3}\r\n        >\r\n          <a\r\n            href={\r\n              this.state.wikiSearchReturnValues[key3].queryResultPageFullURL\r\n            }\r\n            target=\"blank\"\r\n          >\r\n            <h3>\r\n              {this.state.wikiSearchReturnValues[key3].queryResultPageTitle}\r\n            </h3>\r\n            <p\r\n              className=\"description\"\r\n              dangerouslySetInnerHTML={{\r\n                __html: this.state.wikiSearchReturnValues[key3]\r\n                  .queryResultPageSnippet\r\n              }}\r\n            ></p>\r\n          </a>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"Wikipedia bg-gray-100 rounded p-2 m-4 border-2 border-black\">\r\n        <h2>Wikipedia</h2>\r\n        <form className=\"search-bar\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"p-2 my-2 mx-auto rounded shadow-lg w-3/5\"\r\n            value={this.state.WikiSearchTerms || \"\"}\r\n            onChange={this.changeWikiSearchTerms}\r\n            placeholder=\"Search Wikipedia Articles\"\r\n          />\r\n          <button\r\n            className=\"my-2 bg-indigo-700 text-blue-100 p-2 rounded shadow-lg\"\r\n            type=\"submit\"\r\n            onClick={this.useWikiSearchEngine}\r\n          >\r\n            Suche\r\n          </button>\r\n        </form>\r\n        {WikiSearchResults}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Wikipedia;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport SpotifyOwn from \"../components/SpotifyOwn\";\r\nimport Youtube from \"../components/Youtube\";\r\nimport Wikipedia from \"../components/Wikipedia\";\r\nimport \"./Layout.css\";\r\n/**\r\n * @name Bodygrid.js (Layout)\r\n * @author Schober Andreas\r\n * @const Bodygrid: combines the React Components to create the Layout for the Website\r\n *                 the Components contain all needed functionality and data needed\r\n * @return: all needed components\r\n */\r\nconst Bodygrid = () => {\r\n  return (\r\n    <>\r\n      <div className=\"Body\">\r\n        <div className=\"Spotify \">\r\n          <SpotifyOwn />\r\n        </div>\r\n        <div className=\"Youtube\">\r\n          <Youtube />\r\n        </div>\r\n        <div className=\"Wikipedia\">\r\n          <Wikipedia />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bodygrid;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport \"./Layout.css\";\r\n/**\r\n * @name Footergrid.js (Layout)\r\n * @author Schober Andreas\r\n * @const Footergrid: containts all information of the footer\r\n *\r\n * @return: display footer\r\n */\r\nconst Footergrid = () => {\r\n  return (\r\n    <>\r\n      <div className=\"Footer mt-10 text-center\">\r\n        <hr />\r\n        <p>\r\n          vocational school project \"AllEarsMusicHeads\"\r\n          <br />\r\n          <br />\r\n          Searchengine for Spotify, Youtube and Wikipedia\r\n          <br />\r\n          <br />\r\n          by\r\n          <br />\r\n          <br />\r\n          Andreas Schober\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footergrid;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"./layout/Layout.css\";\r\n\r\nimport Headergrid from \"./layout/Headergrid\";\r\nimport Bodygrid from \"./layout/Bodygrid\";\r\nimport Footergrid from \"./layout/Footergrid\";\r\n\r\n/**\r\n * @name App.js (Layout)\r\n * @author Schober Andreas\r\n * @const App: combine the needed layout components and provides the flex-container to create the website, this file is besides the index.js the MainFile of the project\r\n * @return: the 3 layout components which contain the whole functionality of the website\r\n */\r\nconst App = () => {\r\n  return (\r\n    <div className=\"flex-container\">\r\n      <Headergrid />\r\n      <Bodygrid />\r\n      <Footergrid />\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Store from \"./store/Store\";\r\n/**\r\n * @name Index.js\r\n * @author Schober Andreas\r\n * @const Index: wrap <Store> component around the rendered <App> component to provide the global state (for the query) to all components inside <App>\r\n *\r\n * @return: display footer\r\n */\r\nconst Index = () => {\r\n  return (\r\n    <Store>\r\n      <App />\r\n    </Store>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Index />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}